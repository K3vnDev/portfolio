---
const items = ['Projects', 'About', 'Contact']
---

<nav
  class={`
    fixed left-1/2 -translate-x-1/2 flex gap-8 py-3 px-12 bg-black 
    rounded-full bg-opacity-40 backdrop-blur-sm z-30 border border-zinc-800 text-gray-400
    `}
  id='navbar'
>
  {
    items.map(item => (
      <button
        data-scroll-element={item.toLowerCase()}
        class='text-lg font-semibold hover:scale-105 active:scale-95 transition'
      >
        {item}
      </button>
    ))
  }
</nav>

<script>
  // add navigation on click to navbar items
  const buttons = [...document.querySelectorAll('#navbar button')]

  buttons.forEach(button => {
    const id = button.getAttribute('data-scroll-element')
    if (id === 'contact') return

    button.addEventListener('click', e => {
      e.preventDefault()

      const element = document.querySelector(`#${id}`)
      element?.scrollIntoView({ behavior: 'smooth', block: 'center' })
    })
  })

  // hide navbar when scrolling down
  const navbar = document.querySelector('#navbar') as HTMLElement

  let lastScroll = 0

  document.addEventListener('scroll', () => {
    const { scrollY } = window

    const movementY = scrollY - lastScroll
    lastScroll = scrollY

    if (movementY < 0) {
      navbar.classList.add(visibleTop)
      navbar.classList.remove('-top-20')
    } else {
      navbar.classList.remove(visibleTop)
      navbar.classList.add('-top-20')
    }
  })
  const visibleTop = 'top-4'
  navbar.classList.add(visibleTop)

  // highlight navbar items when its scroll element is visible
  const callback = (entries: any[]) => {
    entries.forEach(entry => {
      const { id } = entry.target
      if (!entry.isIntersecting) return

      buttons.forEach(button => {
        button.getAttribute('data-scroll-element') === id
          ? button.classList.add('text-white')
          : button.classList.remove('text-white')
      })
    })
  }

  const observer = new IntersectionObserver(callback, {
    root: null,
    rootMargin: '0px',
    threshold: 1
  })

  const sections = [...document.querySelectorAll('main > section')]
  sections.forEach(section => observer.observe(section))
</script>

<style>
  #navbar {
    transition: top 0.3s ease;
  }
</style>
